{"version":3,"sources":["assets/images/kelvin-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","logo.svg","components/SideBar/SideBar.js","components/UI/ScrollArrow/ScrollArrow.js","containers/Util/auth.js","components/Layout/Layout.js","containers/Map/Map.js","components/UI/ModalReact/ModalReact.js","components/UI/Button/Button.js","containers/RequestDetails/RequestDetails.js","containers/Util/location.js","constants.js","containers/Home/Home.js","components/UI/TextInput/TextInput.js","components/UI/SelectInput/SelectInput.js","containers/Util/validate.js","components/UI/Loader/Loader.js","components/Tab/Tab.js","components/Tabs/Tabs.js","containers/Request/Request.js","components/UI/EmailInput/EmailInput.js","containers/SignIn/SignIn.js","containers/SignUp/SignUp.js","containers/Conversation/Conversation.js","containers/Inbox/Inbox.js","components/UI/ImageInput/ImageInput.js","containers/Profile/Profile.js","routes.js","containers/Chat/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["logo","props","className","src","kelvinLogo","alt","navigationItem","to","link","onClick","navSelected","children","navigationItems","currentUser","clicked","signout","drawerToggle","toolbar","style","height","padding","drawerToggleClicked","backdrop","show","Openn","transform","Close","sideDrawer","attachedClasses","open","closed","SideBar","id","icon","faHome","faUserCheck","ScrollArrow","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","display","faArrowUp","getCurrentUser","JSON","parse","localStorage","getItem","signoutUser","removeItem","Layout","componentDidMount","setState","state","showSideDrawer","navBarColor","authenticated","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","this","Component","blueIcon","L","iconUrl","markerIcon","iconAnchor","popupAnchor","shadowSize","shadowAnchor","redIcon","fillGreenOptions","color","fillColor","fillOpacity","Map","MapContainer","center","location","zoom","scrollWheelZoom","TileLayer","attribution","url","Circle","pathOptions","radius","Popup","requests","map","value","key","Marker","position","latlng","request_type","eventHandlers","click","ModalReact","button","classes","Button","btnType","join","RequestDetails","request","description","replace","fulfilled","disabled","user_id","volunteer","updatePosition","loca","parseFloat","coords","latitude","toFixed","longitude","showError","error","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","options","enableHighAccuracy","getLocation","navigator","geolocation","getCurrentPosition","SERVER_API_URL","Home","fetchRequests","fetch","method","headers","Authorization","then","res","json","result","total","newObject","obj","fina","push","lat","lng","isLoading","console","log","updateRequest","body","stringify","data","createVolunteer","createConversation","conversation","conversationId","requestHandler","requestSelected","requestConvo","requestCancel","handleVolunteer","recipient_id","sender_id","request_id","handleResponse","a","responseId","history","createResponse","places","length","modalClosed","TextInput","formControl","touched","valid","type","SelectInput","option","toLowerCase","minLengthValidator","minLength","maxLengthValidator","maxLength","requiredValidator","trim","requiredNumberValidator","Number","emailValidator","test","String","validate","rules","isValid","rule","loader","Tab","label","activeTab","Tabs","onClickTabItem","tab","child","Request","updatedControls","formControls","validationRules","formIsValid","inputIdentifier","sortedRequests","slice","sort","b","created_at","handleUpdate","req","republishRequest","handleRepublish","changeHandler","event","name","target","updatedFormElement","onSubmitForm","preventDefault","formData","formElementId","submitFormToApi","response","status","initialFormState","formSuccess","formFailure","formMessage","message","catch","allRequests","isRequired","placeholderText","placeholder","onChange","scope","moment","format","defaultChecked","responses_count","is_republishable","EmailInput","prop","propNoA","SignIn","user","ok","auth","get","token","split","setItem","Error","statusText","links","self","attributes","firstname","saveUserToLocalStorage","reload","email","password","toString","SignUp","onFileClicked","myRef","current","files","FormData","append","file","React","createRef","lastname","picture","encType","htmlFor","ref","accept","Conversation","fetchMessages","requestId","messages","fetchConversations","fetchConversationsByRequestId","sendMessage","submitForm","e","conversation_id","parseInt","handleSubmit","handleChange","query","search","onSubmit","onKeyPress","Inbox","inbox","forEach","container","content","response_id","request_description","uniqueResponses","Array","from","Set","find","responses","ImageInput","Profile","updatePicture","fileField","document","querySelector","photoInput","getElementById","upload_file","entries","pair","routes","path","component","createSocket","cable","createConsumer","chats","subscriptions","create","channel","connected","disconnected","received","msg","chatMessages","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.08bff511.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kelvin-logo.1abaff0d.png\";","import React from 'react';\n\nimport kelvinLogo from '../../assets/images/kelvin-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"Logoo\">\n        <img src={kelvinLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className=\"NavigationItem\">\n        <NavLink \n            to={props.link} onClick={props.navSelected}\n            >\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => {\n\n    return (\n    \n        props.currentUser ? <ul className=\"NavigationItems\"> \n                    <NavigationItem navSelected={props.clicked} link=\"/home\">Home</NavigationItem>\n                    <NavigationItem navSelected={props.clicked} link=\"/inbox\" >Inbox</NavigationItem>\n                    <NavigationItem navSelected={props.clicked} link=\"/request\" >Request</NavigationItem>\n                    <li className=\"NavigationItem\">\n                        <NavLink \n                            to='/signin' \n                            onClick={props.signout} >\n                                Logout                            \n                        </NavLink>\n                    </li>\n                    \n                </ul> : \n                <ul className=\"NavigationItems\"> \n                    <NavigationItem link=\"/signup\" >SignUp</NavigationItem>\n                    <NavigationItem link=\"/signin\" >SignIn</NavigationItem>\n                </ul>\n    \n    );\n}\n\n\nexport default navigationItems;","import React from 'react';\n\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nimport { NavLink } from 'react-router-dom';\n\nconst toolbar = ( props ) => {\n\n    return(\n        <header className=\"Toolbar\" >\n            <div style={{height: '100%', padding: '1px'}}>\n                <NavLink to=\"/home\"> <Logo/> </NavLink>\n            </div>\n            <nav className=\"DesktopOnly\">\n                <NavigationItems currentUser={props.currentUser} signout={props.signout} />\n            </nav>\n            <DrawerToggle clicked={props.drawerToggleClicked} />\n        </header>\n    );\n};\n\nexport default toolbar;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst Openn = {\n    transform: 'translateX(0)'\n}\n\nconst Close = {\n    transform: 'translateX(-100%)'\n}\n\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = {...Close};\n    if (props.open) {\n        attachedClasses = {...Openn};\n    }\n    return (\n        <>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div style={attachedClasses} className=\"SideDrawer\">\n                <div className=\"Logo\">\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems currentUser={props.currentUser} clicked={props.drawerToggleClicked}/>\n                </nav>\n            </div>\n        </>\n    );\n};\n\nexport default sideDrawer;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './SideBar.css';\n\nimport logo from '../../logo.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faUserCheck } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst SideBar = (props) => {\n\n    return(\n\n        <div className=\"SideBar\">\n\n            <header id=\"header\">\n                <div className=\"d-flex flex-column justify-content-center text-center\">\n\n                <div className=\"profile mt-5\">\n                    <img src={logo} alt=\"\" className=\"img-fluid rounded-circle\"/>\n                    <h2>Aid Platform</h2>\n                    <div className=\"social-links mt-3 text-center\">\n                    </div>\n                </div>\n\n                {props.currentUser ? <nav className=\"nav-menu d-flex flex-column mt-3\">\n                    <ul>\n                        <NavLink to=\"/home\"><li><FontAwesomeIcon icon={faHome} /> <span>Volunteer To Help</span></li>\n                        </NavLink>\n                        <NavLink to=\"/request\"><li><FontAwesomeIcon icon={faUserCheck} /> <span>Ask For Help</span></li>\n                        </NavLink>\n                    </ul>\n                </nav> : null}\n\n                </div>\n            </header>\n            \n        </div>\n  \n    );\n\n    \n\n}\n\nexport default SideBar;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport './ScrollArrow.css';\n\nconst ScrollArrow = () => {\n  \n    const [showScroll, setShowScroll] = useState(false)\n\n    const checkScrollTop = () => {\n        if (!showScroll && window.pageYOffset > 400){\n        setShowScroll(true)\n        } else if (showScroll && window.pageYOffset <= 400){\n        setShowScroll(false)\n        }\n    };\n    \n    const scrollTop = () =>{\n        window.scrollTo({top: 0, behavior: 'smooth'});\n    };\n    \n    window.addEventListener('scroll', checkScrollTop)\n\n    return (\n        <div className=\"ScrollArrow\" onClick={scrollTop} style={{height: 40, display: showScroll ? 'flex' : 'none'}}>\n            <button className=\"btn pb-5\"><span><FontAwesomeIcon icon={faArrowUp} /></span></button> \n        </div>\n    );\n\n  }\n\n  export default ScrollArrow;","const setTokenToLocalStorage = (token) => {\n    localStorage.setItem(\"token\", token);\n}\n\nconst saveUserToLocalStorage = (data) => {\n    let user = data.attributes;\n    user.id = data.id;\n    localStorage.setItem(\"name\", user.firstname);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem('user'));;\n}\n\nconst removeTokenFromLocalStorage = () => {\n    localStorage.removeItem(\"token\");\n}\n\nconst signoutUser = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"name\");\n}\n\nexport { setTokenToLocalStorage, removeTokenFromLocalStorage, saveUserToLocalStorage, getCurrentUser, signoutUser } ;","import React, { Component } from 'react';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport SideBar from '../SideBar/SideBar';\nimport './Layout.css';\nimport ScrollArrow from '../UI/ScrollArrow/ScrollArrow';\nimport { getCurrentUser, signoutUser } from '../../containers/Util/auth';\n\n\nclass Layout extends Component {\n\n    componentDidMount =() => {\n        this.setState( { currentUser: getCurrentUser() } );\n    }\n\n    state = {\n        showSideDrawer: false,\n        navBarColor: true,\n        currentUser: null,\n        authenticated: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    signout = () => {\n        signoutUser();\n        this.setState( { currentUser: null } );\n    }\n\n    render() {\n        return(\n            <>\n                <Toolbar navBarColor={this.state.navBarColor} drawerToggleClicked={this.sideDrawerToggleHandler} \n                            currentUser={this.state.currentUser} signout={this.signout} />\n                <div className=\"\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <SideBar currentUser={this.state.currentUser} />\n                        </div>\n\n                        <div className=\"col-md-9\">\n                        <SideDrawer\n                            currentUser={this.state.currentUser}\n                            open={this.state.showSideDrawer}\n                            closed={this.sideDrawerClosedHandler}      \n                            drawerToggleClicked={this.sideDrawerClosedHandler}/>\n                             <main className=\"Layout\">\n                                {this.props.children}\n                            </main>\n                        </div>\n\n                    </div>\n\n                </div>\n                <ScrollArrow />\n            </>                \n        );\n    }\n}\n\nexport default Layout;","import 'leaflet/dist/leaflet.css'\nimport './Map.css'\nimport markerIcon from 'leaflet/dist/images/marker-icon.png'\n\nimport { MapContainer, TileLayer, Marker, Circle, Popup } from 'react-leaflet'\nimport L from 'leaflet'\n\nconst blueIcon = L.icon({\n  iconUrl: markerIcon,\n  iconAnchor: [22, 94],\n  popupAnchor: [-3, -76],\n  shadowSize: [68, 95],\n  shadowAnchor: [22, 94]\n})\n\nconst redIcon = L.icon({\n    iconUrl: 'https://img.icons8.com/color/48/000000/marker.png',\n    iconAnchor: [22, 94],\n    popupAnchor: [-3, -76],\n    shadowSize: [68, 95],\n    shadowAnchor: [22, 94]\n  })\n\n  const fillGreenOptions = { color: '#008000', fillColor: 'green', fillOpacity: 0.5 }\n\nconst Map = (props) => {\n  return (\n    <MapContainer center={props.location} zoom={13} scrollWheelZoom={false} style={{ height: '500px' }}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <Circle center={props.location} pathOptions={fillGreenOptions} radius={200} >\n        <Popup>\n          You Are Here\n        </Popup>\n      </Circle>\n            {props.requests.map((value, key) => {\n                return (\n                    <Marker position={value.latlng} icon={value.request_type == \"one_time\" ? redIcon : blueIcon} key={key} eventHandlers={{\n                            click: () => {\n                              props.clicked(value)\n                            },\n                          }} >\n                    </Marker>\n                )\n            })}\n    </MapContainer>\n  );\n}\n\nexport default Map;","import React, { Component } from 'react';\n\nimport './ModalReact.css';\n\nclass ModalReact extends Component {\n\n    render () {\n        return (\n            <>\n            <div className={this.props.show ? 'ModalReact display-block' : 'ModalReact display-none'}>\n                <section className='main'>\n                {this.props.children}\n                </section>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default ModalReact;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n    {...props}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React from 'react';\n\nimport Button from '../../components/UI/Button/Button';\n\nconst RequestDetails = (props) => {\n\n            return (\n                <>\n                {props.request.id && (\n                    <div>\n                        <h3>Help Request Details</h3>                \n                        <p><strong>Description: {props.request.description}</strong></p>\n                        <p><strong>Request Type: {props.request.request_type.replace(\"_\",\" \")}</strong></p>\n                        <p><strong>Status: {props.request.fulfilled ? \"Fulfilled\" : \"Unfulfilled\"}</strong></p>\n                        <Button className=\"btn btn-primary m-2\" btnType=\"Success\" disabled={props.request.user_id == props.currentUser.id} clicked={props.volunteer}> VOLUNTEER </Button>\n                        <Button className=\"m-2\" btnType=\"Danger\" clicked={props.closed}> CANCEL </Button>\n                    </div>\n\n                )}\n                </>\n            );\n       \n}\n\nexport default RequestDetails;","const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(updatePosition, showError, options);\n    } else { \n        alert(\"Geolocation is not supported by this browser.\");\n    }\n    return loca;\n}\n  \nconst updatePosition = position => {\n\n    loca[0] = parseFloat(position.coords.latitude.toFixed(3))\n    loca[1] = parseFloat(position.coords.longitude.toFixed(3))\n}\n\n// Displays the different error messages\nconst showError = error => {\n    switch (error.code) {\n    case error.PERMISSION_DENIED:\n        alert(\"You denied the request for your location.\");\n        break;\n    case error.POSITION_UNAVAILABLE:\n        alert(\"Your Location information is unavailable.\");\n        break;\n    case error.TIMEOUT:\n        alert(\"Your request timed out. Please try again\");\n        break;\n    case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred please try again after some time.\");\n        break;\n    }\n}\n\n\n//Makes sure location accuracy is high\nconst options = {\n    enableHighAccuracy: true\n}\n\nconst loca = [];\n\nexport default getLocation;","export const SERVER_API_URL = 'https://aid-platform-rails.herokuapp.com';\nexport const ACTION_CABLE_URL = 'wss://aid-platform-rails.herokuapp.com/cable';","import React, { Component } from \"react\";\nimport './Home.css';\nimport Map from \"../Map/Map\";\nimport ModalReact from '../../components/UI/ModalReact/ModalReact';\nimport RequestDetails from '../RequestDetails/RequestDetails';\nimport getLocation from '../Util/location';\nimport { SERVER_API_URL } from '../../constants'\nimport { getCurrentUser } from '../../containers/Util/auth';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: true,\n            requests: [],\n            places: [],\n            request: {},\n            requestSelected: false,\n            location: [],\n            conversationId: null,\n            responseId:null,\n            currentUser: getCurrentUser()\n        }\n    }\n\n    componentDidMount() {\n        this.fetchRequests();\n        this.setState({ location : getLocation() })\n    }\n\n    fetchRequests = () => {\n        const url = `${SERVER_API_URL}/api/v1/requests`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.total > 0) {\n                         let newObject = result.requests.map(obj => {\n                            let fina =  {}\n                            fina = { ...obj, latlng:[] }\n                            fina['latlng'].push(obj.lat, obj.lng)\n                            return fina\n                         })\n                         this.setState({ requests: newObject});\n                    }\n                    this.setState({\n                        isLoading: false,\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    updateRequest = (request) => {\n        const url = `${SERVER_API_URL}/api/v1/requests/${request.id}`;\n        fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(request),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        request: result.data\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    createVolunteer = (volunteer) => {\n        const url = `${SERVER_API_URL}/api/v1/volunteers`;\n        fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(volunteer),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {   \n                    this.setState({\n                        isLoading: false\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    createConversation = (conversation) => {\n        console.log(\"createConversation \", conversation)\n        const url = `${SERVER_API_URL}/api/v1/conversations`;\n        fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(conversation),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {   \n                    this.setState({\n                        conversationId: result.id,\n                        isLoading: false\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    requestHandler = (request) => {        \n        this.setState({\n            request,\n            requestSelected: true\n        })\n    }\n\n    requestConvo = (request) => {        \n        this.setState({\n            request,\n            requestSelected: true\n        })\n    }\n\n    handleClick() {\n        this.props.history.push('/conversation');\n      }\n\n    requestCancel = () => {\n        this.setState({requestSelected: false})\n    }\n\n    handleVolunteer = () => {\n        let request = { ...this.state.request }\n        let conversation = {\n            recipient_id: request.user_id,\n            sender_id: this.state.currentUser.id,\n            request_id: request.id\n        }\n        this.createConversation(conversation);\n\n        let volunteer = {\n            user_id: this.state.currentUser.id,\n            request_id: request.id\n        }\n        this.createVolunteer(volunteer);\n    }\n\n    \n     handleResponse = async () => {\n        \n        try {\n            const url = `${SERVER_API_URL}/api/v1/responses`;\n            const res = await fetch(url, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                    },\n                    body: JSON.stringify({ request_id: this.state.request.id}),\n                });\n                let result = await res.json()\n                this.setState({ responseId : result.data.id });\n                this.props.history.push(`/chat?responseId=${this.state.responseId}`);\n            } catch(e) {\n                console.log(e);\n            }\n    }\n\n    createResponse = async () => {\n        try {\n        const url = `${SERVER_API_URL}/api/v1/responses`;\n        const res = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify({ request_id: this.state.request.id}),\n            });\n            let result = await res.json()\n            this.setState({ responseId : result.data.id });\n            this.props.history.push(`/chat?responseId=${this.state.responseId}`);\n        } catch(e) {\n            console.log(e);\n          }\n            \n    }\n\n    render () {\n        return(\n            <div className=\"Home\">\n                <div className=\"hero-container mb-5\">\n                    <div>\n                         <h1>Unfufilled Requests: {this.state.requests.length}</h1>\n                    </div>\n                    { this.state.location.length > 1 &&\n                    <Map location={this.state.location} requests={this.state.requests} clicked={this.requestHandler} />\n                     }\n\n                    <ModalReact show={this.state.requestSelected} modalClosed={this.requestCancel}\n                     open={this.state.requestSelected}\n                     closed={this.requestCancel}>\n                                <RequestDetails \n                                currentUser={this.state.currentUser}\n                                responseId={this.state.responseId}\n                                    volunteer={this.handleResponse}\n                                    closed={this.requestCancel} \n                                    request={this.state.request} />\n                                </ModalReact>\n                </div>\n                \n            </div>\n        );\n    };\n}\n\nexport default Home;","import React from 'react'\n\nconst TextInput = props => {\n    \n    let formControl = \"form-control\";\n\n    if (props.touched && !props.valid) {\n        formControl = 'form-control control-error';\n    }\n\n    return (\n        <div className=\"form-group\">\n            <input type={props.type} className={formControl} {...props} />\n        </div>\n    );\n}\n\nexport default TextInput;","import React from 'react'\n\nconst SelectInput = props => {\n    \n    let formControl = \"form-control\";\n\n    if (props.touched && !props.valid) {\n        formControl = 'form-control control-error';\n    }\n\n    return (\n        <div className=\"form-group\"> \n            <select className={formControl} {...props}>\n                {props.options.map((option, key) => {\n                    return (\n                        <option value={option.toLowerCase().replace(\" \",\"_\")} key={key}>{option}</option>\n                    )\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport default SelectInput;","const validate = (value, rules) => {\n    let isValid = true;\n    \n    for (let rule in rules) {\n    \n      switch (rule) {\n          case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]); break;\n\n          case 'maxLength': isValid = isValid && maxLengthValidator(value, rules[rule]); break;\n          \n          case 'isRequired': isValid = isValid && requiredValidator(value); break;\n\n          case 'isRequiredNumber': isValid = isValid && requiredNumberValidator(value); break;\n              \n          case 'isEmail': isValid = isValid && emailValidator(value); break;\n          \n            default: isValid = true;\n      }\n  \n    }\n    \n    return isValid;\n  }\n  \n  \n  /**\n   * minLength Val\n   * @param  value \n   * @param  minLength\n   * @return          \n   */\n  const minLengthValidator = (value, minLength) => {\n      return value.length >= minLength;\n  }\n\n  /**\n   * maxLength Val\n   * @param  value \n   * @param  maxLength\n   * @return          \n   */\n  const maxLengthValidator = (value, maxLength) => {\n    return value.length <= maxLength;\n}\n  \n  /**\n   * Check to confirm that feild is required\n   * \n   * @param  value \n   * @return       \n   */\n  const requiredValidator = value => {\n      return value.trim() !== '';\t\n  }\n\n  /**\n   * Check to confirm that field is a number\n   * \n   * @param  value \n   * @return       \n   */\n  const requiredNumberValidator = value => {\n    return Number(value) === value && value % 1 !== 0;\n}\n\n  \n  /**\n   * Email validation\n   * \n   * @param value\n   * @return \n   */\n  const emailValidator = value => {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(value).toLowerCase());\n  }\n  \n  \n  \n  export default validate;","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = (props) => (\n    props.show ? <div className=\"Loader\" ></div> : null\n);\n\nexport default loader;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from '../Tab/Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component } from 'react';\nimport './Request.css';\nimport TextInput from '../../components/UI/TextInput/TextInput';\nimport SelectInput from '../../components/UI/SelectInput/SelectInput';\nimport validate from '../Util/validate';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { getCurrentUser } from '../../containers/Util/auth';\nimport Tabs from \"../../components/Tabs/Tabs\"; \nimport moment from 'moment'\nimport { SERVER_API_URL } from '../../constants'\n\n\n//Makes sure location accuracy is high\nconst options = {\n    enableHighAccuracy: true\n}\n    \nclass Request extends Component {\n\n    constructor () {\n        super()\n        this.state = {\n            isLoading: false,\n            error: null,\n            formIsValid: false, //we will use this to track the overall form validity\n            formControls: this.initialFormState(),\n            formSuccess: false,\n            formFailure: false,\n            formMessage: null,\n            allRequests: true,\n            requests: [],\n            currentUser: getCurrentUser(),\n            disabled: false\n        }\n      \n    }\n\n    componentDidMount() {\n        this.fetchRequests(this.state.currentUser.id);\n    }\n    \n    initialFormState() {\n        return {\n            description: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    minLength: 10,\n                    maxLength: 300,\n                    isRequired: true\n                },\n                placeholderText: 'Enter Description',\n                touched: false\n            },\n            request_type: {\n                value: 'one_time',\n                valid: true,\n                options: ['One Time', 'Material Need'],\n                placeholderText: 'Select Type'\n            },\n            lat: {\n                value: '',\n                placeholderText: 'Latitude',\n                touched: false\n            },\n            lng: {\n                value: '',\n                placeholderText: 'Longitude',\n                touched: false\n            }\n        }\n    }\n\n    getLocation = () => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.updatePosition, this.showError, options);\n        } else { \n            alert(\"Geolocation is not supported by this browser.\");\n        }\n    }\n      \n    updatePosition = position => {\n        const updatedControls = {\n            ...this.state.formControls\n        };\n       \n        updatedControls.lat.value = position.coords.latitude.toFixed(3)\n        updatedControls.lng.value = position.coords.longitude.toFixed(3)\n\n        updatedControls.lat.valid = validate(position.coords.latitude, updatedControls.lat.validationRules);\n        updatedControls.lng.valid = validate(position.coords.longitude, updatedControls.lng.validationRules);\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedControls) {\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        })\n    }\n\n    showError = error => {\n        switch (error.code) {\n        case error.PERMISSION_DENIED:\n            alert(\"You denied the request for your location.\");\n            break;\n        case error.POSITION_UNAVAILABLE:\n            alert(\"Your Location information is unavailable.\");\n            break;\n        case error.TIMEOUT:\n            alert(\"Your request timed out. Please try again\");\n            break;\n        case error.UNKNOWN_ERROR:\n            alert(\"An unknown error occurred please try again after some time.\");\n            break;\n        }\n    }\n\n    fetchRequests = (user_id) => {\n        const url = `${SERVER_API_URL}/api/v1/requests/user/${user_id}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    const sortedRequests = result.requests.slice().sort((a, b) => a.created_at > b.created_at ? -1 : 1)\n                    this.setState({\n                        isLoading: false,\n                        requests: sortedRequests\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    updateRequest = (request) => {\n        const url = `${SERVER_API_URL}/api/v1/requests/${request.id}`;\n        fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(request),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        request: result.data,\n                        disabled: !this.state.disabled\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    handleUpdate = (request) => {\n        let req = { ...request }\n        req.fulfilled = !req.fulfilled\n        this.updateRequest(req);\n    }\n\n    republishRequest = (request_id) => {\n        const url = `${SERVER_API_URL}/api/v1/requests/republish/${request_id}`;\n        fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: null,\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                    });\n                    this.props.history.push('/home');\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    handleRepublish = (request_id) => {\n        this.republishRequest(request_id);\n    }\n\n    changeHandler = event => {\n        \n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls = {\n            ...this.state.formControls\n        };\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n\n        if (Number(value) === value && value % 1 !== 0) value = value.toFixed(2);\n\n        updatedFormElement.value = value;\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedControls) {\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        });\n    }\n\n    onSubmitForm = (event) => {\n        this.setState({ isLoading: true })\n        event.preventDefault();\n        const formData = {};\n        for (let formElementId in this.state.formControls) {\n            formData[formElementId] = this.state.formControls[formElementId].value;\n        }\n        \n        this.submitFormToApi(formData);\n    }\n\n    submitFormToApi = (formData) => {\n        const url = `${SERVER_API_URL}/api/v1/requests`\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: JSON.stringify(formData),\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ isLoading: false })\n                if (data.status === \"00\") {\n                    this.setState({ formControls: this.initialFormState(), formIsValid: false, formSuccess: true })\n                } else {\n                    this.setState({ formFailure: true, formMessage: data.message })\n                }\n                \n            })\n            .catch((error) => {\n                this.setState({ isLoading: false })\n                console.error('Error:', error);\n            });\n    }\n    \n     render() {\n\n        const { error, isLoading, requests } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (isLoading) {\n            return <Loader show={this.state.isLoading} />;\n        } else {\n\n            return(\n                \n                <div className=\"Request\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Requests</h2>\n                        </div>\n\n                        <div className=\"row d-flex justify-content-center\">\n                            <div className=\"col-12\">\n\n                            <Tabs> \n                                \n                                <div label=\"Request Form\"> \n                                    \n                                    { this.state.formSuccess ? (<h3>Your Request Has Been Submitted. Thank You!</h3>) : null }\n                                    <form className=\"Contact\">\n\n                                        <div className=\"form-group\">\n                                            <label>Description:</label>\n                                            <TextInput name=\"description\"  type=\"text\"\n                                                placeholder={this.state.formControls.description.placeholderText}\n                                                value={this.state.formControls.description.value}\n                                                onChange={this.changeHandler}\n                                                touched={this.state.formControls.description.touched}\n                                                valid={this.state.formControls.description.valid}\n                                                />\n                                        </div>\n\n\n                                        <div className=\"form-group\">\n                                            <label>Type:</label>\n                                            <SelectInput name=\"request_type\" \n                                                placeholder={this.state.formControls.request_type.placeholderText}\n                                                value={this.state.formControls.request_type.value}\n                                                onChange={this.changeHandler}\n                                                options={this.state.formControls.request_type.options}\n                                                />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label>Location:</label>\n                                            <div className=\"d-flex flex-row\">\n                                                <TextInput name=\"lat\" type=\"number\"\n                                                    placeholder={this.state.formControls.lat.placeholderText}\n                                                    value={this.state.formControls.lat.value}\n                                                    onChange={this.changeHandler}\n                                                    touched={this.state.formControls.lat.touched}\n                                                    valid={this.state.formControls.lat.valid}\n                                                    />\n\n                                                    <TextInput name=\"lng\" type=\"number\" className=\"form-control ml-3\"\n                                                    placeholder={this.state.formControls.lng.placeholderText}\n                                                    value={this.state.formControls.lng.value}\n                                                    onChange={this.changeHandler}\n                                                    touched={this.state.formControls.lng.touched}\n                                                    valid={this.state.formControls.lng.valid}\n                                                    />\n\n                                                    <div className=\"form-group\">\n                                                    <button className=\"btn btn-primary mx-4\" type=\"button\" onClick={this.getLocation}>Get My Location</button>\n                                                    </div>\n                                            </div>\n                                            \n                                        </div>\n\n                                        <button className=\"btn btn-primary\" onClick={this.onSubmitForm} disabled={!this.state.formIsValid} > Submit Request </button>\n                                    \n\n                                    </form> \n                                    \n                                </div> \n\n                                <div label=\"Requests\"> \n                                    \n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">#</th>\n                                                <th scope=\"col\">Description</th>\n                                                <th scope=\"col\">Request Type</th>\n                                                <th scope=\"col\">Date</th>\n                                                <th scope=\"col\">Mark As Fufilled</th>\n                                                <th scope=\"col\">Responses Count</th>\n                                                <th scope=\"col\">Republish</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {requests.map((value, key) => {\n                                                return(\n                                                    <tr key={value.id}>\n                                                        <th scope=\"row\">{key+1}</th>\n                                                        <td>{value.description}</td>\n                                                        <td>{value.request_type.replace(\"_\",\" \")}</td>\n                                                        <td>{moment(value.created_at).format('MM/DD/YYYY')}</td>\n                                                        <td>\n                                                        <div className=\"form-check\">\n                                                            <input className=\"form-check-input position-static\" \n                                                            type=\"checkbox\" \n                                                            defaultChecked={value.fulfilled}\n                                                            name={value.description} \n                                                            id={value.id} \n                                                            value={value}\n                                                            disabled={value.fulfilled}\n                                                            onClick={() => this.handleUpdate(value)} />\n                                                        </div>\n                                                        </td>\n                                                        <td>{value.responses_count}</td>\n                                                        <td onClick={() => this.handleRepublish(value.id)}>\n                                                            <button disabled={!value.fulfilled && value.is_republishable ? false : true} className=\"btn btn-primary\"> Click </button>\n                                                        </td>\n                                                    </tr>\n                                                );\n                                            })}\n                                            \n                                        </tbody>\n                                    </table>\n\n                                </div> \n\n                            </Tabs> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            );\n        }\n    }\n\n};\n\nexport default Request;","import React from 'react'\n\nconst EmailInput = props => {\n    \n    let formControl = \"form-control\";\n\n    if (props.touched && !props.valid) {\n        formControl = 'form-control control-error';\n    }\n\n    const prop = { ...props };\n    const { valid, ...propNoA } = prop;\n\n    return (\n        <div className=\"form-group\">\n            <input type=\"email\" className={formControl} {...propNoA} />\n        </div>\n    );\n}\n\nexport default EmailInput;","import React, { Component } from 'react';\nimport './SignIn.css';\nimport TextInput from '../../components/UI/TextInput/TextInput';\nimport EmailInput from '../../components/UI/EmailInput/EmailInput';\nimport validate from '../Util/validate';\nimport { setTokenToLocalStorage, removeTokenFromLocalStorage, saveUserToLocalStorage } from '../Util/auth';\nimport { SERVER_API_URL } from '../../constants'\nimport Loader from '../../components/UI/Loader/Loader';\n\nclass SignIn extends Component {\n\n    constructor () {\n        super()\n        this.state = {\n            isLoading: false,\n            error: null,\n            formIsValid: false, //we will use this to track the overall form validity\n            formControls: this.initialFormState(),\n            formSuccess: false,\n            formFailure: false,\n            formMessage: null\n        }\n      \n    }\n\n    initialFormState() {\n        return {\n            email: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    isRequired: true\n                },\n                placeholderText: 'Enter Email Address',\n                touched: false\n            },\n            password: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    minLength: 5,\n                    maxLength: 50,\n                    isRequired: true\n                },\n                placeholderText: 'Enter Password',\n                touched: false\n            }\n        }\n    }\n    \n    changeHandler = event => {\n        \n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls = {\n            ...this.state.formControls\n        };\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedControls) {\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        });\n    }\n\n    onSubmitForm = (event) => {\n        removeTokenFromLocalStorage();\n        this.setState({ isLoading: true })\n        event.preventDefault();\n        const formData = {};\n        for (let formElementId in this.state.formControls) {\n            formData[formElementId] = this.state.formControls[formElementId].value;\n        }\n        this.submitFormToApi(formData);\n    }\n\n    submitFormToApi = (formData) => {\n        const url = `${SERVER_API_URL}/api/v1/login`\n        \n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user: formData }),\n            })\n            .then(response => {\n                if (response.ok) {\n                    const auth = response.headers.get('authorization')\n                    if (auth) setTokenToLocalStorage(auth.split(' ')[1]);\n                    return response.json();\n                } else {\n                    let error = new Error(response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            })\n            .then(data => {\n                this.setState({ isLoading: false })\n                if (data.data) {\n                    this.setState({ formControls: this.initialFormState(), formIsValid: false, formSuccess: true, formMessage: data.data.links.self })\n                    saveUserToLocalStorage(data.data);\n                    window.location.reload();\n                    this.props.history.push('/home');\n                } else {\n                    this.setState({ formIsValid: false, formFailure: true, formMessage: data.error })\n                }\n                \n            })\n            .catch((error) => {\n                this.setState({ isLoading: false })\n                this.setState({ formIsValid: true, formFailure: true, formMessage: \"Network Error\" })\n                console.error('Error:', error);\n            });\n    }\n    \n     render() {\n\n        const { error, isLoading } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (isLoading) {\n            return <Loader show={this.state.isLoading} />;\n        } else {\n\n            return (\n\n                <div className=\"SignIn\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Login</h2>\n                        </div>\n\n                        <div className=\"row d-flex justify-content-center\">\n                            <div className=\"col-12\">\n                                { this.state.formSuccess ? (<h3>{ this.state.formMessage }</h3>) : null }\n                                { this.state.formFailure ? (<h3>{ this.state.formMessage }</h3>) : null }\n                                <form className=\"Contact\">\n\n                                    <div className=\"form-group\">\n                                        <label>Email Address:</label>\n                                        <EmailInput name=\"email\" \n                                            placeholder={this.state.formControls.email.placeholderText}\n                                            value={this.state.formControls.email.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.email.touched.toString()}\n                                            valid={this.state.formControls.email.valid.toString()}\n                                            />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Password:</label>\n                                        <TextInput name=\"password\" \n                                            placeholder={this.state.formControls.password.placeholderText}\n                                            value={this.state.formControls.password.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.password.touched.toString()}\n                                            valid={this.state.formControls.password.valid.toString()}\n                                            type=\"password\"\n                                            />\n                                    </div>\n\n                                    <button className=\"btn btn-primary\" onClick={this.onSubmitForm} disabled={!this.state.formIsValid} > Log In </button>\n                                </form> \n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                    \n            );\n        }\n    }\n\n};\n\nexport default SignIn;","import React, { Component } from 'react';\nimport './SignUp.css';\nimport TextInput from '../../components/UI/TextInput/TextInput';\nimport EmailInput from '../../components/UI/EmailInput/EmailInput';\nimport validate from '../Util/validate';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { SERVER_API_URL } from '../../constants'\n\n\nclass SignUp extends Component {\n\n    constructor () {\n        super()\n        this.myRef = React.createRef();\n        this.state = {\n            isLoading: false,\n            error: null,\n            formIsValid: false, //we will use this to track the overall form validity\n            formControls: this.initialFormState(),\n            formSuccess: false,\n            formFailure: false,\n            formMessage: null,\n            file: null \n        }\n      \n    }\n\n    initialFormState() {\n        return {\n            firstname: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    minLength: 5,\n                    isRequired: true\n                },\n                placeholderText: 'Enter First Name',\n                touched: false\n            },\n            lastname: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    minLength: 5,\n                    isRequired: true\n                },\n                placeholderText: 'Enter Last Name',\n                touched: false\n            },\n            password: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    minLength: 5,\n                    isRequired: true\n                },\n                placeholderText: 'Enter password',\n                touched: false\n            },\n            email: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    isRequired: true\n                },\n                placeholderText: 'Enter Email Address',\n                touched: false\n            },\n            picture: {\n                value: '',\n                valid: false,\n                validationRules: {\n                    isRequired: true\n                },\n                touched: false\n            }\n        }\n    }\n    \n    changeHandler = event => {\n        \n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls = {\n            ...this.state.formControls\n        };\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedControls) {\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        });\n\n    }\n\n    onFileClicked = () => {\n        let file = this.myRef.current.files[0];\n        if (file) {\n            this.setState({\n                formIsValid: true\n            });\n        }\n    }\n\n    onSubmitForm = (event) => {\n        this.setState({ isLoading: true })\n        event.preventDefault();\n        const formData = new FormData()\n\n        for (let formElementId in this.state.formControls) {\n            formData[formElementId] = this.state.formControls[formElementId].value;\n            formData.append(formElementId, this.state.formControls[formElementId].value);\n        }\n\n        let file = this.myRef.current.files[0];\n        formData.append(\"picture\", file);\n\n        this.submitFormToApi(formData);\n\n    }\n    \n    submitFormToApi = (formData) => {\n        const url = `${SERVER_API_URL}/api/v1/signup`\n        \n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: formData,\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ isLoading: false })\n\n                if (data.data) {\n                    this.setState({ formControls: this.initialFormState(), formIsValid: false, formSuccess: true, formMessage: 'Registration Successful.' })\n                } else {\n                    this.setState({ formIsValid: false, formFailure: true, formMessage: data.error })\n                }\n            })\n            .catch((error) => {\n                this.setState({ isLoading: false })\n                this.setState({ formIsValid: true, formFailure: true, formMessage: \"Network Error\" })\n                console.error('Error:', error);\n            });\n\n    }\n    \n     render() {\n\n        const { error, isLoading } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (isLoading) {\n            return <Loader show={this.state.isLoading} />;\n        } else {\n\n            return (\n\n                <div className=\"SignUp\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>SignUp For Help</h2>\n                        </div>\n\n                        <div className=\"row d-flex justify-content-center\">\n                            <div className=\"col-12\">\n                                { this.state.formSuccess ? (<h3>{ this.state.formMessage }</h3>) : null }\n                                { this.state.formFailure ? (<h3>{ this.state.formMessage }</h3>) : null }\n                                <form className=\"Contact\" encType=\"multipart/form-data\">\n\n                                    <div className=\"form-group\">\n                                        <label>First Name:</label>\n                                        <TextInput name=\"firstname\" \n                                            placeholder={this.state.formControls.firstname.placeholderText}\n                                            value={this.state.formControls.firstname.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.firstname.touched}\n                                            valid={this.state.formControls.firstname.valid}\n                                            />\n                                    </div>\n\n\n                                    <div className=\"form-group\">\n                                        <label>Last Name:</label>\n                                        <TextInput name=\"lastname\" \n                                            placeholder={this.state.formControls.lastname.placeholderText}\n                                            value={this.state.formControls.lastname.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.lastname.touched}\n                                            valid={this.state.formControls.lastname.valid}\n                                            />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Password:</label>\n                                        <TextInput name=\"password\" \n                                            type=\"password\"\n                                            placeholder={this.state.formControls.password.placeholderText}\n                                            value={this.state.formControls.password.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.password.touched}\n                                            valid={this.state.formControls.password.valid}\n                                            />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Email Address:</label>\n                                        <EmailInput name=\"email\" \n                                            placeholder={this.state.formControls.email.placeholderText}\n                                            value={this.state.formControls.email.value}\n                                            onChange={this.changeHandler}\n                                            touched={this.state.formControls.email.touched}\n                                            valid={this.state.formControls.email.valid}\n                                            />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"picture\">Picture:</label>\n                                        <input type=\"file\" ref={this.myRef}  name=\"picture\" onChange={this.onFileClicked}\n                                        accept=\"image/png, image/jpeg, image/pdf\" className=\"form-control-file\" />\n                                    </div>\n\n                                    <button className=\"btn btn-primary\" onClick={this.onSubmitForm} disabled={!this.state.formIsValid} > Sign Up </button>\n\n                                </form>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                    \n            );\n        }\n    }\n\n};\n\nexport default SignUp;","import React, { Component } from \"react\";\nimport './Conversation.css';\nimport TextInput from '../../components/UI/TextInput/TextInput';\nimport { getCurrentUser } from '../../containers/Util/auth';\nimport { SERVER_API_URL } from '../../constants'\n\nclass Conversation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: true,\n            requests: [],\n            places: [],\n            messages: [],\n            message: \"\",\n            query: \"\",\n            requestId: null,\n            conversationId: null,\n            name: \"\",\n            currentUser: getCurrentUser()\n        }\n    }\n\n    componentDidMount() {\n        const { currentUser }  = this.state\n        this.setState({ name: currentUser.firstname + \" \" + currentUser.lastname });\n        this.setState({ requestId: this.props.location.search.split(\"=\")[1] });\n        this.fetchConversationsByRequestId(this.props.location.search.split(\"=\")[1]);\n    }\n\n    fetchMessages = (requestId) => {\n        const url = `${SERVER_API_URL}/api/v1/messages/${requestId}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        messages: result.messages\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    fetchConversations = (conversationId) => {\n        const url = `${SERVER_API_URL}/api/v1/conversations/${conversationId}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        messages: result.messages\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    fetchConversationsByRequestId = (requestId) => {\n        const url = `${SERVER_API_URL}/api/v1/conversations/requestid/${requestId}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {      \n                    console.log(\"fetchConversationsByRequestId \", result)              \n                    this.setState({\n                        conversationId: result.data.id,\n                        isLoading: false,\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    sendMessage = (formData) => {\n        console.log(\"\")\n        const url = `${SERVER_API_URL}/api/v1/messages`;\n        fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(formData),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoading: false,\n                        message: '',\n                        messages: [ ...this.state.messages, formData ]\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    submitForm = (e) => {\n        if (e.key === 'Enter') {\n            let data = {\n                body: this.state.message,\n                name: this.state.name,\n                conversation_id: this.state.conversationId,\n                user_id: parseInt(this.state.currentUser.id)\n            }\n            console.log(\"submitForm \", this.state.conversationId)\n            this.sendMessage(data);\n        }\n        \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n      }\n\n    handleChange = (e) => {\n        this.setState({ message: e.target.value })\n    }\n\n    render () {\n        return(\n\n                <div className=\"Conversation\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Chats</h2>\n                        </div>\n\n                        <div className=\"row d-flex flex-column justify-content-space-between\">\n                            <div className=\"col-12\">\n\n                            <div  className=\"mb-auto\">\n                                    <ul className=\"message-list flex-container column\">                 \n                                        {this.state.messages.map(message => {\n                                        return (\n                                        <li key={message.id}>\n                                            <div className=\"name\">\n                                            {message.name}\n                                            </div>\n                                            <div className=\"text\">\n                                            {message.body}\n                                            </div>\n                                        </li>\n                                        )\n                                    })}\n                                    </ul>\n\n                            </div>\n                                \n\n                            <div className=\"mt-auto\">\n\n                                    <div className=\"form-group\" onSubmit={this.handleSubmit} className=\"send-message-form\">\n                                        <TextInput name=\"send-message-form\" \n                                            placeholder=\"Type your message and hit ENTER\"\n                                            value={this.state.message}\n                                            onChange={this.handleChange}\n                                            onKeyPress={this.submitForm}\n                                            />\n                                    </div>\n\n                            </div>\n                                    \n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n        );\n    };\n}\n\nexport default Conversation;","import React, { Component } from \"react\";\nimport './Inbox.css';\nimport { getCurrentUser } from '../../containers/Util/auth';\nimport { NavLink } from \"react-router-dom\";\nimport { SERVER_API_URL } from '../../constants'\n\n\nclass Inbox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: true,\n            requests: [],\n            places: [],\n            request: null,\n            requestSelected: false,\n            messages: [],\n            message: \"\",\n            query: \"\",\n            requestId: null,\n            currentUser: getCurrentUser(),\n            inbox: []\n        }\n    }\n\n    componentDidMount() {\n        this.fetchMessages(this.state.currentUser.id);\n    }\n\n    fetchMessages = (user_id) => {\n        const url = `${SERVER_API_URL}/api/v1/responses`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let inbox = []\n                     let res = [];\n                     result.requests.forEach(req => {\n                        res = req.messages.map(obj => {\n\n                            const container = {};\n\n                            container.id = obj.id;\n                            container.content = obj.content;\n                            container.request_id = obj.request_id;\n                            container.response_id = obj.response_id;\n                            container.request_description = req.description;\n\n                            return container;\n                         })\n                     })\n\n                     const uniqueResponses = Array.from(new Set(res.map(a => a.response_id)))\n                        .map(id => {\n                        return res.find(a => a.response_id === id)\n                        })\n\n                    inbox = [...inbox, ...uniqueResponses]\n                     result.responses.forEach(obj => {\n                        let fina =  {\n                            id: obj.id,\n                            content: obj.messages[0].content,\n                            request_id: obj.request_id,\n                            response_id: obj.id,\n                            request_description: obj.request.description\n                        }\n                        inbox.push(fina)\n                     })\n                     \n                    this.setState({\n                        isLoading: false,\n                        inbox: inbox\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    render () {\n        return(\n\n                <div className=\"Inbox\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Inbox...</h2>\n                        </div>\n\n                        <div className=\"row d-flex flex-column justify-content-space-between\">\n                            <div className=\"col-12\">\n\n                            <div  className=\"card mb-auto\">\n                                    <ul className=\"list-group list-group-flush message-list flex-container column\">                 \n                                        {this.state.inbox.map(message => {\n                                        return (\n                                        <NavLink key={message.id}\n                                                to={`/chat?response_id=${message.response_id}`} >\n                                                <li className=\"list-group-item\" key={message.id}>\n                                                    \n                                                    <div className=\"name\">\n                                                    {message.request_description}\n                                                    </div>\n                                                    <div className=\"text\">\n                                                    {message.content}\n                                                    </div>\n                                                </li>\n                                        </NavLink>\n                                        )\n                                    })}\n                                    </ul>\n                                    \n                            </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n        );\n    };\n}\n\nexport default Inbox;","import React from 'react'\n\nconst ImageInput = props => {\n    \n    let formControl = \"form-control-file\";\n\n    if (props.touched && !props.valid) {\n        formControl = 'form-control-file control-error';\n    }\n\n    return (\n        <div className=\"form-group\">\n            <input type=\"file\" ref={props.ref} accept=\"image/png, image/jpeg, image/pdf\" className={formControl} {...props} id={props.name} />\n        </div>\n    );\n}\n\nexport default ImageInput;","import React, { Component } from \"react\";\nimport './Profile.css';\nimport { getCurrentUser } from '../../containers/Util/auth';\nimport ImageInput from '../../components/UI/ImageInput/ImageInput';\nimport { SERVER_API_URL } from '../../constants'\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: true,\n            picture: \"\",\n            currentUser: getCurrentUser()\n        }\n    }\n\n    componentDidMount() {\n    }\n\n\n    updatePicture = (formData) => {\n        const url = `${SERVER_API_URL}/api/v1/user`;\n        fetch(url, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(formData),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        requests: result.requests\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({\n          message: ''\n        })\n      }\n\n    handleChange = (e) => {\n        this.setState({\n            picture: e.target.value\n        })\n    }\n\n    onSubmitForm = (event) => {\n        this.setState({ isLoading: true })\n        event.preventDefault();\n        const formData = new FormData()\n\n        const fileField = document.querySelector('input[type=\"file\"]');\n        console.log(\"fileField \" ,fileField);\n\n        let photoInput = document.getElementById('picture');\n        if (photoInput.files[0]) {\n            let upload_file = photoInput.files[0]\n            formData.append(\"picture\", upload_file);      \n            \n             \n            for(var pair of formData.entries()) {\n                console.log(pair[0]+ ', '+ pair[1]); \n            }\n\n            this.updatePicture(formData);\n        }\n\n    }\n\n    render () {\n        const { currentUser } = this.state;\n\n        return(\n\n                <div className=\"Inbox\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Profile</h2>\n                        </div>\n\n                        <div className=\"row d-flex flex-column justify-content-space-between\">\n                            <div className=\"col-12\">\n                                <div className=\"\">\n                                    \n                                    <p>First name: {currentUser.firstname}</p>\n                                    <p>Last name: {currentUser.lastname}</p>\n                                    <p>Email: {currentUser.email}</p>\n                                    <p>Date Registered: {currentUser.created_at}</p>\n\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Picture:</label>\n                                    <ImageInput name=\"picture\" \n                                        placeholder=\"Upload a picture\"\n                                        value={this.state.picture}\n                                        onChange={this.handleChange}\n                                        />\n                                </div>\n                                \n                                <button className=\"btn btn-primary\" onClick={this.onSubmitForm} > Save </button>\n                            \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n        );\n    };\n}\n\nexport default Profile;","import Home from \"./containers/Home/Home\";\nimport Request from \"./containers/Request/Request\";\nimport SignIn from \"./containers/SignIn/SignIn\";\nimport SignUp from \"./containers/SignUp/SignUp\";\nimport Conversation from \"./containers/Conversation/Conversation\";\nimport Inbox from \"./containers/Inbox/Inbox\";\nimport Profile from \"./containers/Profile/Profile\";\nimport Chat from \"./containers/Chat/Chat\";\n\nconst routes = [\n  {\n    path: \"/home\",\n    name: \"Home\",\n    icon: \"\",\n    component: Home\n  },\n  {\n    path: \"/request\",\n    name: \"Request\",\n    icon: \"\",\n    component: Request\n  },\n  {\n    path: \"/signup\",\n    name: \"SignUp\",\n    icon: \"\",\n    component: SignUp\n  },\n  {\n    path: \"/signin\",\n    name: \"SignIn\",\n    icon: \"\",\n    component: SignIn\n  },\n  {\n    path: \"/conversation\",\n    name: \"Conversation\",\n    icon: \"\",\n    component: Conversation\n  },\n  {\n    path: \"/inbox\",\n    name: \"Inbox\",\n    icon: \"\",\n    component: Inbox\n  },\n  {\n    path: \"/chat\",\n    name: \"Chat\",\n    icon: \"\",\n    component: Chat\n  },\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: \"\",\n    component: Profile\n  }\n  \n];\n\nexport default routes;","import React, { Component } from \"react\";\nimport './Chat.css';\nimport TextInput from '../../components/UI/TextInput/TextInput';\nimport { getCurrentUser } from '../../containers/Util/auth';\nimport { SERVER_API_URL, ACTION_CABLE_URL } from '../../constants'\nimport { createConsumer } from '@rails/actioncable';\n\nclass Chat extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: true,\n            requests: [],\n            places: [],\n            messages: [],\n            message: \"\",\n            query: \"\",\n            requestId: null,\n            responseId: null,\n            name: \"\",\n            currentUser: getCurrentUser()\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ responseId: this.props.location.search.split(\"=\")[1] });\n        this.fetchMessages(this.props.location.search.split(\"=\")[1]);\n        this.createSocket();\n    }\n      \n    createSocket() {\n        let cable = createConsumer(ACTION_CABLE_URL);\n        this.chats = cable.subscriptions.create({\n            channel: 'MessagesChannel',\n            id: this.props.location.search.split(\"=\")[1]\n        }, {\n          connected: () => {\n            console.log(\"Connected\")\n          },\n          disconnected: () => {\n            // Called when the subscription has been terminated by the server\n            console.log(\"disconnected\")\n          },\n          received: (data) => {\n            // Called when there's incoming data on the websocket for this channel\n              let msg = {\n                    id: data.id,\n                    user: {\n                        firstname: data.firstname\n                    },\n                    content: data.content\n                }\n\n                let chatMessages = this.state.messages;\n                chatMessages.push(msg);\n                this.setState({ messages: chatMessages , message: ''});\n          }\n        });\n      }\n\n    fetchMessages = (responseId) => {\n        const url = `${SERVER_API_URL}/api/v1/messages/${responseId}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => { \n                    this.setState({\n                        isLoading: false,\n                        messages: result\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    fetchConversations = (conversationId) => {\n        const url = `${SERVER_API_URL}/api/v1/conversations/${conversationId}`;\n        fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {                    \n                    this.setState({\n                        isLoading: false,\n                        messages: result.messages\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    sendMessage = (formData) => {\n        const url = `${SERVER_API_URL}/api/v1/messages`;\n        fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify(formData),\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoading: false,\n                    });\n                },\n                (error) => {\n                    console.log('Error > ', error)\n                    this.setState({\n                        isLoading: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    submitForm = (e) => {\n        if (e.key === 'Enter') {\n            let data = {\n                content: this.state.message,\n                response_id: parseInt(this.state.responseId),\n                user_id: parseInt(this.state.currentUser.id)\n            }\n            this.sendMessage(data);\n        }\n        \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n      }\n\n    handleChange = (e) => {\n        this.setState({ message: e.target.value })\n    }\n\n    render () {\n        \n        return(\n\n                <div className=\"Chat\">\n                    <div className=\"container\">\n\n                        <div className=\"section-title\">\n                            <h2>Chats</h2>\n                        </div>\n\n                        <div className=\"row d-flex flex-column justify-content-space-between\">\n                            <div className=\"col-12\">\n\n                            <div  className=\"mb-auto\">\n                                    <ul className=\"message-list flex-container column\">                 \n                                        {this.state.messages.map(message => {\n                                        return (\n                                        <li key={message.id}>\n                                            <div className=\"name\">\n                                            {message.user.firstname}\n                                            </div>\n                                            <div className=\"text\">\n                                            {message.content}\n                                            </div>\n                                        </li>\n                                        )\n                                    })}\n                                    </ul>\n\n                            </div>\n                                \n\n                            <div className=\"mt-auto\">\n\n                                    <div className=\"form-group\" onSubmit={this.handleSubmit} className=\"send-message-form\">\n                                        <TextInput name=\"send-message-form\" \n                                            placeholder=\"Type your message and hit ENTER\"\n                                            value={this.state.message}\n                                            onChange={this.handleChange}\n                                            onKeyPress={this.submitForm}\n                                            />\n                                    </div>\n\n                            </div>\n                                    \n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n        );\n    };\n}\n\nexport default Chat;","import './App.css';\nimport Layout from './components/Layout/Layout';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport routes from './routes';\nimport { getCurrentUser } from './containers/Util/auth';\n\nfunction App() {\n  return (\n    <div>\n            <Layout >\n              <Redirect to={getCurrentUser() ? \"/home\" : \"/signin\"}  />\n              <Switch>\n                  {routes.map((prop, key) => {\n                  return (\n                      <Route \n                      path={prop.path}\n                      component={prop.component}\n                      key={key}\n                      />\n                  );\n                  })}\n              </Switch>\n            </Layout>\n        </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}